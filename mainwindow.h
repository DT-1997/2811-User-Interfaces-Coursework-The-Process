#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include "player.h"
#include <QMainWindow>
#include <QDebug>
#include <QApplication>
#include <QTimer>

QT_BEGIN_NAMESPACE
namespace Ui {
class MainWindow;
}
QT_END_NAMESPACE

// MainWindow class inherits from QMainWindow and handles the main window functionality
class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    // Constructor for MainWindow
    MainWindow(QWidget *parent = nullptr);
    // Destructor for MainWindow
    ~MainWindow();

private slots:
    // Slot to handle phone resolution button click
    void onPhoneResolutionClicked();
    // Slot to handle tablet resolution button click
    void onTabletResolutionClicked();
    // Slot to handle desktop resolution button click
    void onDesktopResolutionClicked();
    // Slot to handle "Show List" button click
    void onShowListButtonClicked();
    // Slot to handle fullscreen button click
    void onFullscreenButtonClicked();
    // Slot to update mouse position
    void updateMousePosition();
    // Slot to handle comment button click
    void onCommentButtonClicked();
    // Slot to handle Phone Size
    void updateWatchLabel();

protected:
    // Event handler for resize event
    void resizeEvent(QResizeEvent *event) override;

    // Optional: Uncomment and implement if you need to handle mouse move event
    // void mouseMoveEvent(QMouseEvent *event) override;

private:
    Ui::MainWindow *ui;  // UI elements, generated by Qt Designer

    TomeoUi uiTool;  // Custom UI tool to handle UI updates

    QMediaPlaylist* playerList;     // Playlist object to manage video list

    Player* player;  // Player object to control video playback

    int screenWidth;  // Variable to store screen width
    int screenHeight;  // Variable to store screen height

    bool showAll;  // Flag to determine whether all controls are visible

    QVideoWidget* videoWidget;  // Widget to display video playback

    // Method to update device mode (e.g., phone, tablet, desktop)
    void updateDeviceMode();

    // Methods to get screen width and height
    int getScreenWidth();
    int getScreenHeight();

    // Method to toggle the visibility of controls
    void showControls(bool showAll);

    // Method to toggle the visibility of the progress bar
    void showProgressBar(bool showAll);

    // Method to start a timer to hide controls after a delay
    void startHideControlsTimer();

    // Method to update font size of the username in comments
    void updateUsernameFontSize(int fontSize);

    // Method to set font size for media elements (e.g., video titles, descriptions)
    void setMediaFont(int size);

    QTimer *mouseMoveTimer;  // Timer to update mouse position periodically

    bool controlsVisible = false;  // Flag to track whether controls are currently visible

    bool isPhone = false;
};

#endif // MAINWINDOW_H
